{"version":3,"sources":["Section/Section.module.scss","Filter/Filter.module.scss","ContactForm/ContactForm.module.scss","Section/Section.js","redux/contacts/contacts-actions.js","ContactForm/ContactForm.js","ContactForm/ContactForm.container.js","Filter/Filter.js","Filter/Filter.container.js","ContactList/ContactList.js","ContactList/ContactList.container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","ContactList/ContactList.module.scss"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","addContact","createAction","name","number","payload","id","shortid","generate","delContact","filterContact","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","submitHandler","find","contact","alert","reset","this","form","onSubmit","input","onChange","type","pattern","required","btn","Component","connect","items","dispatch","Filter","onFilter","filter","ContactList","handleDelContact","length","map","onClick","allContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","App","itemsReducer","createReducer","actions","filterReducer","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f42bd85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2q0pM\",\"main-title\":\"Section_main-title__tk9RD\",\"title\":\"Section_title__29n_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Filter_example__2DZG8\",\"input-layout\":\"Filter_input-layout__14d_F\",\"title\":\"Filter_title__CXDok\",\"input\":\"Filter_input__1a9py\",\"btn\":\"Filter_btn__CxlQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DDNKx\",\"input-layout\":\"ContactForm_input-layout__1QT46\",\"title\":\"ContactForm_title__1oauV\",\"input\":\"ContactForm_input__12Zgx\",\"btn\":\"ContactForm_btn__IrApL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nexport const addContact = createAction(\n  'contacts/add-contact',\n  (name, number) => {\n    return {\n      payload: {\n        name,\n        number,\n        id: shortid.generate(),\n      },\n    };\n  },\n);\nexport const delContact = createAction('contacts/del-contact');\nexport const filterContact = createAction('contacts/filter-contact');\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts, submitHandler } = this.props;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : submitHandler(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { addContact } from '../redux/contacts/contacts-actions';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => {\n  const { items } = state.contacts;\n  return { contacts: items };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: ({ name, number }) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = props => {\n  const { value, onFilter } = props;\n  return (\n    <div className={styles['input-layout']}>\n      <label className={styles.title}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { filterContact } from '../redux/contacts/contacts-actions';\nimport Filter from './Filter';\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: e => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = props => {\n  const { contacts, handleDelContact } = props;\n  return (\n    contacts.length !== 0 && (\n      <ul className={styles['contacts-list']}>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <li className={styles['contacts-list-item']} key={id}>\n              <div className={styles['contact-container']}>\n                <span className={styles.contact}>{name}:</span>\n                <span className={styles.contact}>{number}</span>\n                <button\n                  className={styles.btn}\n                  type=\"button\"\n                  onClick={() => handleDelContact(id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport { delContact } from '../redux/contacts/contacts-actions';\nimport ContactList from './ContactList';\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n  return { contacts: visibleContacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelContact: id => dispatch(delContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './Section';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nconst App = () => {\n  return (\n    <>\n      <Section title={'Phonebook'} main={true}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport * as actions from './contacts-actions';\nconst itemsReducer = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [actions.delContact]: (state, { payload }) => {\n    const filteredContacts = state.filter(contact => contact.id !== payload);\n    return filteredContacts;\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contacts from './contacts';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contacts),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  // .concat(logger),\n});\n\nlet persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__3yjYP\",\"contacts-list-item\":\"ContactList_contacts-list-item__3a5Jw\",\"contact-container\":\"ContactList_contact-container__2kh1c\",\"btn\":\"ContactList_btn__wO9MV\"};"],"sourceRoot":""}