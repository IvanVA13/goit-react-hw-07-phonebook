{"version":3,"sources":["Section/Section.module.scss","Filter/Filter.module.scss","ContactForm/ContactForm.module.scss","Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","ContactForm/ContactForm.js","ContactForm/ContactForm.container.js","Filter/Filter.js","Filter/Filter.container.js","ContactList/ContactList.js","ContactList/ContactList.container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","ContactList/ContactList.module.scss"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","addContactRequest","createAction","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterContact","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","submitHandler","find","contact","alert","reset","this","form","onSubmit","input","onChange","type","pattern","required","btn","Component","connect","dispatch","a","post","data","addContact","Filter","onFilter","ContactList","fetchContacts","handleDelContact","length","map","id","onClick","delete","error","delContact","get","App","itemsReducer","createReducer","_","payload","loaderReducer","filterReducer","combineReducers","loader","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAa,4BAA4B,MAAQ,yB,mBCAtGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,eAAe,6BAA6B,MAAQ,sBAAsB,MAAQ,sBAAsB,IAAM,sB,kBCAlKD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,eAAe,kCAAkC,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,gICG1KC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAApB,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACGH,EACC,oBAAIC,UAAWC,IAAO,cAAtB,SAAsCJ,IAEtC,oBAAIG,UAAWC,IAAOJ,MAAtB,SAA8BA,IAE/BC,MAILF,EAAQO,aAAe,CACrBN,MAAO,GACPE,MAAM,GAQOH,Q,+BCtBFQ,EAAoBC,YAAa,8BACjCC,EAAoBD,YAAa,8BACjCE,EAAkBF,YAAa,4BAG/BG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAG/BM,EAAsBN,YAAa,gCACnCO,EAAsBP,YAAa,gCACnCQ,EAAoBR,YAAa,8BAGjCS,EAAgBT,YAAa,2B,iBCN1CU,IAAMC,SAASC,QAAU,wBAElB,I,YCZMC,EAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACnCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAqBC,YAChC,CAACP,EAAUI,IACX,SAACD,EAAOE,GACN,IAAMG,EAAmBH,EAAOI,cAChC,OAAON,EAAME,QAAO,qBAAGK,KAChBD,cAAcE,SAASH,S,uDCoEnBI,E,4MAxEbX,MAAQ,CACNS,KAAM,GACNG,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,IAAQV,EAAS,EAAKT,MAAdS,KACR,EAAoC,EAAKW,MAAjCnB,EAAR,EAAQA,SAAUoB,EAAlB,EAAkBA,cAElBpB,EAASqB,MAAK,SAAAC,GAAO,OAAIA,EAAQd,OAASA,KACtCe,MAAM,GAAD,OAAIf,EAAJ,4BACLY,EAAc,EAAKrB,OAEvB,EAAKyB,S,EAGPA,MAAQ,WACN,EAAKR,SAAS,CAAER,KAAM,GAAIG,OAAQ,M,4CAGpC,WACE,MAAyBc,KAAK1B,MAAtBS,EAAR,EAAQA,KAAMG,EAAd,EAAcA,OACd,OACE,uBAAM/B,UAAWC,IAAO6C,KAAMC,SAAUF,KAAKR,aAA7C,UACE,qBAAKrC,UAAWC,IAAO,gBAAvB,SACE,wBAAOD,UAAWC,IAAOJ,MAAzB,iBAEE,uBACEG,UAAWC,IAAO+C,MAClBC,SAAUJ,KAAKb,aACfkB,KAAK,OACLtB,KAAK,OACLO,MAAOP,EACPuB,QAAQ,yHACRtD,MAAM,kcACNuD,UAAQ,SAId,qBAAKpD,UAAWC,IAAO,gBAAvB,SACE,wBAAOD,UAAWC,IAAOJ,MAAzB,mBAEE,uBACEG,UAAWC,IAAO+C,MAClBC,SAAUJ,KAAKb,aACfkB,KAAK,MACLtB,KAAK,SACLO,MAAOJ,EACPoB,QAAQ,yFACRtD,MAAM,giBACNuD,UAAQ,SAId,wBAAQpD,UAAWC,IAAOoD,IAAKH,KAAK,SAApC,gC,GA7DkBI,aCQXC,eARS,SAAApC,GAAK,MAAK,CAChCC,SAAUF,EAASC,OAGM,SAAAqC,GAAQ,MAAK,CACtChB,cAAe,gBAAGZ,EAAH,EAAGA,KAAMG,EAAT,EAASA,OAAT,OAAsByB,EHIb,SAAC5B,EAAMG,GAAP,8CAAkB,WAAMyB,GAAN,mBAAAC,EAAA,6DACpCf,EAAU,CACdd,OACAG,UAEFyB,EAASpD,KALiC,kBAQjBW,IAAM2C,KAAK,YAAahB,GARP,gBAQhCiB,EARgC,EAQhCA,KACRH,EAASlD,EAAkBqD,IATa,kDAWxCH,EAASjD,EAAgB,EAAD,KAXgB,0DAAlB,sDGJsBqD,CAAWhC,EAAMG,QAGlDwB,CAA6CzB,G,iBCa7C+B,EAtBA,SAAAtB,GACb,IAAQJ,EAAoBI,EAApBJ,MAAO2B,EAAavB,EAAbuB,SACf,OACE,qBAAK9D,UAAWC,IAAO,gBAAvB,SACE,wBAAOD,UAAWC,IAAOJ,MAAzB,kCAEE,uBACEG,UAAWC,IAAO+C,MAClBE,KAAK,OACLf,MAAOA,EACPc,SAAUa,UCALP,eARS,SAAApC,GAAK,MAAK,CAChCgB,MAAOb,EAAUH,OAGQ,SAAAqC,GAAQ,MAAK,CACtCM,SAAU,SAAA7B,GAAC,OAAIuB,EAAS1C,EAAcmB,EAAEC,OAAOC,YAGlCoB,CAA6CM,G,gBCiC7CE,E,uKA1Cb,WACElB,KAAKN,MAAMyB,kB,oBAGb,WACE,MAAuCnB,KAAKN,MAApCnB,EAAR,EAAQA,SAAU6C,EAAlB,EAAkBA,iBAClB,OACsB,IAApB7C,EAAS8C,QACP,oBAAIlE,UAAWC,IAAO,iBAAtB,SACGmB,EAAS+C,KAAI,YAA2B,IAAxBvC,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQqC,EAAS,EAATA,GAC7B,OACE,oBAAIpE,UAAWC,IAAO,sBAAtB,SACE,sBAAKD,UAAWC,IAAO,qBAAvB,UACE,uBAAMD,UAAWC,IAAOyC,QAAxB,UAAkCd,EAAlC,OACA,sBAAM5B,UAAWC,IAAOyC,QAAxB,SAAkCX,IAClC,wBACE/B,UAAWC,IAAOoD,IAClBH,KAAK,SACLmB,QAAS,kBAAMJ,EAAiBG,IAHlC,wBAJ8CA,Y,GAZtCd,aCWXC,eAPS,SAAApC,GAAK,MAAK,CAAEC,SAAUI,EAAmBL,OAEtC,SAAAqC,GAAQ,MAAK,CACtCS,iBAAkB,SAAAG,GAAE,OAAIZ,EPkBA,SAAAY,GAAE,OAAI,SAAAZ,GAC9BA,EAAShD,KAET,IACEO,IAAMuD,OAAN,oBAA0BF,IAC1BZ,EAAS/C,EAAkB2D,IAC3B,MAAOG,GACPf,EAAS9C,EAAgB6D,MOzBMC,CAAWJ,KAC5CJ,cAAe,kBAAMR,EP4BM,uCAAM,WAAMA,GAAN,iBAAAC,EAAA,6DACjCD,EAAS7C,KADwB,kBAIRI,IAAM0D,IAAI,aAJF,gBAIvBd,EAJuB,EAIvBA,KACRH,EAAS5C,EAAoB+C,IALE,gDAO/BH,EAAS3C,EAAkB,EAAD,KAPK,yDAAN,2DOzBd0C,CAA6CQ,GCI7CW,EAdH,WACV,OACE,qCACE,cAAC,EAAD,CAAS7E,MAAO,YAAaE,MAAM,EAAnC,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAASF,MAAO,WAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,gBCEF8E,GAAeC,YAAc,IAAD,mBAC/BhE,GAAsB,SAACiE,EAAD,YAAMC,WADG,cAE/BxE,GAAoB,SAACa,EAAD,GAAyB,IAAf2D,EAAc,EAAdA,QAC7B,MAAM,GAAN,mBAAW3D,GAAX,CAAkB2D,OAHY,cAM/BrE,GAAoB,SAACU,EAAD,GAAyB,IAAf2D,EAAc,EAAdA,QAE7B,OADyB3D,EAAMI,QAAO,SAAAmB,GAAO,OAAIA,EAAQ0B,KAAOU,QAPlC,IAY5BC,GAAgBH,aAAc,GAAD,mBAChCxE,GAAoB,kBAAM,KADM,cAEhCE,GAAoB,kBAAM,KAFM,cAGhCC,GAAkB,kBAAM,KAHQ,cAKhCC,GAAoB,kBAAM,KALM,cAMhCC,GAAoB,kBAAM,KANM,cAOhCC,GAAkB,kBAAM,KAPQ,cAShCC,GAAsB,kBAAM,KATI,cAUhCC,GAAsB,kBAAM,KAVI,cAWhCC,GAAoB,kBAAM,KAXM,IAc7BmE,GAAgBJ,YAAc,GAAD,eAChC9D,GAAgB,SAAC+D,EAAD,YAAMC,YAGVG,gBAAgB,CAC7B5D,MAAOsD,GACPpD,OAAQyD,GACRE,OAAQH,KCjCKI,GAVDC,YAAe,CAC3BC,QAAS,CACPjE,aAEFkE,UAAUC,EACVC,WAAY,SAAAC,GAAoB,OAAIA,O,YCDtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,U,kBCd1BpG,EAAOC,QAAU,CAAC,gBAAgB,mCAAmC,qBAAqB,wCAAwC,oBAAoB,uCAAuC,IAAM,4B","file":"static/js/main.12d6660c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2q0pM\",\"main-title\":\"Section_main-title__tk9RD\",\"title\":\"Section_title__29n_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Filter_example__2DZG8\",\"input-layout\":\"Filter_input-layout__14d_F\",\"title\":\"Filter_title__CXDok\",\"input\":\"Filter_input__1a9py\",\"btn\":\"Filter_btn__CxlQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DDNKx\",\"input-layout\":\"ContactForm_input-layout__1QT46\",\"title\":\"ContactForm_title__1oauV\",\"input\":\"ContactForm_input__12Zgx\",\"btn\":\"ContactForm_btn__IrApL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\n// add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// del\nexport const delContactRequest = createAction('contacts/delContactRequest');\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\nexport const delContactError = createAction('contacts/delContactError');\n\n// fetch\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\n// filter\nexport const filterContact = createAction('contacts/filter-contact');\n","import {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n} from './contacts-actions';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const delContact = id => dispatch => {\n  dispatch(delContactRequest());\n\n  try {\n    axios.delete(`/contacts/${id}`);\n    dispatch(delContactSuccess(id));\n  } catch (error) {\n    dispatch(delContactError(error));\n  }\n};\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts, submitHandler } = this.props;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : submitHandler(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { addContact } from '../redux/contacts/contacts-operations';\nimport { getItems } from '../redux/contacts/contacts-selectors';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => ({\n  contacts: getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: ({ name, number }) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = props => {\n  const { value, onFilter } = props;\n  return (\n    <div className={styles['input-layout']}>\n      <label className={styles.title}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { filterContact } from '../redux/contacts/contacts-actions';\nimport { getFilter } from '../redux/contacts/contacts-selectors';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: e => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport styles from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, handleDelContact } = this.props;\n    return (\n      contacts.length !== 0 && (\n        <ul className={styles['contacts-list']}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <li className={styles['contacts-list-item']} key={id}>\n                <div className={styles['contact-container']}>\n                  <span className={styles.contact}>{name}:</span>\n                  <span className={styles.contact}>{number}</span>\n                  <button\n                    className={styles.btn}\n                    type=\"button\"\n                    onClick={() => handleDelContact(id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport {\n  delContact,\n  fetchContacts,\n} from '../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../redux/contacts/contacts-selectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({ contacts: getVisibleContacts(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelContact: id => dispatch(delContact(id)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './Section';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nconst App = () => {\n  return (\n    <>\n      <Section title={'Phonebook'} main={true}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  filterContact,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [delContactSuccess]: (state, { payload }) => {\n    const filteredContacts = state.filter(contact => contact.id !== payload);\n    return filteredContacts;\n  },\n});\n\nconst loaderReducer = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loader: loaderReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\n\nimport contacts from './contacts';\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  // .concat(logger),\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__3yjYP\",\"contacts-list-item\":\"ContactList_contacts-list-item__3a5Jw\",\"contact-container\":\"ContactList_contact-container__2kh1c\",\"btn\":\"ContactList_btn__wO9MV\"};"],"sourceRoot":""}