{"version":3,"sources":["Section/Section.module.scss","Filter/Filter.module.scss","ContactForm/ContactForm.module.scss","Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","ContactForm/ContactForm.js","ContactForm/ContactForm.container.js","Filter/Filter.js","Filter/Filter.container.js","ContactList/ContactList.js","ContactList/ContactList.container.js","App.js","redux/store.js","index.js","ContactList/ContactList.module.scss"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","addContactRequest","createAction","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterContact","itemsReducer","createReducer","_","payload","state","filter","contact","id","loaderReducer","filterReducer","combineReducers","items","loader","axios","defaults","baseURL","getItems","contacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","submitHandler","find","alert","reset","this","form","onSubmit","input","onChange","type","pattern","required","btn","Component","connect","dispatch","a","post","data","addContact","Filter","onFilter","ContactList","fetchContacts","handleDelContact","length","map","onClick","delete","error","delContact","get","App","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c3e761d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2q0pM\",\"main-title\":\"Section_main-title__tk9RD\",\"title\":\"Section_title__29n_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Filter_example__2DZG8\",\"input-layout\":\"Filter_input-layout__14d_F\",\"title\":\"Filter_title__CXDok\",\"input\":\"Filter_input__1a9py\",\"btn\":\"Filter_btn__CxlQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DDNKx\",\"input-layout\":\"ContactForm_input-layout__1QT46\",\"title\":\"ContactForm_title__1oauV\",\"input\":\"ContactForm_input__12Zgx\",\"btn\":\"ContactForm_btn__IrApL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\n// add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// del\nexport const delContactRequest = createAction('contacts/delContactRequest');\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\nexport const delContactError = createAction('contacts/delContactError');\n\n// fetch\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\n// filter\nexport const filterContact = createAction('contacts/filter-contact');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  filterContact,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [delContactSuccess]: (state, { payload }) => {\n    const filteredContacts = state.filter(contact => contact.id !== payload);\n    return filteredContacts;\n  },\n});\n\nconst loaderReducer = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loader: loaderReducer,\n});\n","import {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n} from './contacts-actions';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const delContact = id => dispatch => {\n  dispatch(delContactRequest());\n\n  try {\n    axios.delete(`/contacts/${id}`);\n    dispatch(delContactSuccess(id));\n  } catch (error) {\n    dispatch(delContactError(error));\n  }\n};\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts, submitHandler } = this.props;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : submitHandler(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\n\nimport { addContact, getItems } from '../redux/contacts';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => ({\n  contacts: getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: ({ name, number }) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = props => {\n  const { value, onFilter } = props;\n  return (\n    <div className={styles['input-layout']}>\n      <label className={styles.title}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { filterContact, getFilter } from '../redux/contacts';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: e => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport styles from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, handleDelContact } = this.props;\n    return (\n      contacts.length !== 0 && (\n        <ul className={styles['contacts-list']}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <li className={styles['contacts-list-item']} key={id}>\n                <div className={styles['contact-container']}>\n                  <span className={styles.contact}>{name}:</span>\n                  <span className={styles.contact}>{number}</span>\n                  <button\n                    className={styles.btn}\n                    type=\"button\"\n                    onClick={() => handleDelContact(id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport {\n  delContact,\n  fetchContacts,\n  getVisibleContacts,\n} from '../redux/contacts';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({ contacts: getVisibleContacts(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelContact: id => dispatch(delContact(id)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './Section';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nconst App = () => {\n  return (\n    <>\n      <Section title={'Phonebook'} main={true}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\n\nimport { contacts } from './contacts';\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  // .concat(logger),\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__3yjYP\",\"contacts-list-item\":\"ContactList_contacts-list-item__3a5Jw\",\"contact-container\":\"ContactList_contact-container__2kh1c\",\"btn\":\"ContactList_btn__wO9MV\"};"],"sourceRoot":""}