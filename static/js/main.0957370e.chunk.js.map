{"version":3,"sources":["Section/Section.module.scss","Filter/Filter.module.scss","ContactForm/ContactForm.module.scss","Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","ContactForm/ContactForm.js","ContactForm/ContactForm.container.js","Filter/Filter.js","Filter/Filter.container.js","ContactList/ContactList.js","ContactList/ContactList.container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","ContactList/ContactList.module.scss"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","addContactRequest","createAction","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterContact","axios","defaults","baseURL","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","submitHandler","find","contact","alert","reset","this","form","onSubmit","input","onChange","type","pattern","required","btn","Component","connect","items","dispatch","a","post","data","addContact","Filter","onFilter","filter","ContactList","handleDelContact","length","map","id","onClick","allContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","delete","then","catch","error","delContact","App","itemsReducer","createReducer","payload","loaderReducer","filterReducer","_","combineReducers","loader","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0957370e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2q0pM\",\"main-title\":\"Section_main-title__tk9RD\",\"title\":\"Section_title__29n_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Filter_example__2DZG8\",\"input-layout\":\"Filter_input-layout__14d_F\",\"title\":\"Filter_title__CXDok\",\"input\":\"Filter_input__1a9py\",\"btn\":\"Filter_btn__CxlQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DDNKx\",\"input-layout\":\"ContactForm_input-layout__1QT46\",\"title\":\"ContactForm_title__1oauV\",\"input\":\"ContactForm_input__12Zgx\",\"btn\":\"ContactForm_btn__IrApL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\n// add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// del\nexport const delContactRequest = createAction('contacts/delContactRequest');\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\nexport const delContactError = createAction('contacts/delContactError');\n\n// fetch\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\n// filter\nexport const filterContact = createAction('contacts/filter-contact');\n","import {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n} from './contacts-actions';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const delContact = id => dispatch => {\n  dispatch(delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(delContactSuccess(id)))\n    .catch(error => dispatch(delContactError(error)));\n};\n\nexport const fetch = id => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const res = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(res));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n};\n\n// export const filterContact = createAction('contacts/filter-contact');\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { contacts, submitHandler } = this.props;\n\n    contacts.find(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : submitHandler(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { addContact } from '../redux/contacts/contacts-operations';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => {\n  const { items } = state.contacts;\n  return { contacts: items };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  submitHandler: ({ name, number }) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = props => {\n  const { value, onFilter } = props;\n  return (\n    <div className={styles['input-layout']}>\n      <label className={styles.title}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\n\nimport { filterContact } from '../redux/contacts/contacts-actions';\nimport Filter from './Filter';\n\nconst mapStateToProps = ({ contacts: { filter } }) => ({\n  value: filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: e => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = props => {\n  const { contacts, handleDelContact } = props;\n  return (\n    contacts.length !== 0 && (\n      <ul className={styles['contacts-list']}>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <li className={styles['contacts-list-item']} key={id}>\n              <div className={styles['contact-container']}>\n                <span className={styles.contact}>{name}:</span>\n                <span className={styles.contact}>{number}</span>\n                <button\n                  className={styles.btn}\n                  type=\"button\"\n                  onClick={() => handleDelContact(id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport { delContact } from '../redux/contacts/contacts-operations';\nimport ContactList from './ContactList';\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n  return { contacts: visibleContacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelContact: id => dispatch(delContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './Section';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nconst App = () => {\n  return (\n    <>\n      <Section title={'Phonebook'} main={true}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  delContactError,\n  delContactRequest,\n  delContactSuccess,\n  fetchContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  filterContact,\n} from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [delContactSuccess]: (state, { payload }) => {\n    const filteredContacts = state.filter(contact => contact.id !== payload);\n    return filteredContacts;\n  },\n});\n\nconst loaderReducer = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loader: loaderReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport contacts from './contacts';\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__3yjYP\",\"contacts-list-item\":\"ContactList_contacts-list-item__3a5Jw\",\"contact-container\":\"ContactList_contact-container__2kh1c\",\"btn\":\"ContactList_btn__wO9MV\"};"],"sourceRoot":""}